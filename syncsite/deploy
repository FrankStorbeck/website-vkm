#!/bin/bash
#
#  deploy.sh
#
#  Synchronizes the website www.vakantiehuis-mimi on the server west.storbeck.nl
#
#  The method has a number of options to handle its behaviour. See Usage ()
#
#  Modified by Frank Storbeck after Carrasco Benitez, M.T.; tym; under the EUPL.
#  See: http://dragoman.org/tym/
#       https://joinup.ec.europa.eu/software/page/eupl
#

# Globals:
readonly    Version="1.2 (22-11-2017)"
readonly    Notice='Copyright: Frank Storbeck. License: EUPL.'
            BaseName=${0##*/}
            BaseName=${BaseName%%.*}
readonly    RemoteUser=franks
readonly    RemoteHost="west.storbeck.nl"
readonly    LocalDir="htdocs"
readonly    RemoteDir="/usr/local/www/vhosts/west.storbeck.nl/htdocs"
            ExitCode=""

# ==========================================================================
# DoSync () does the syncing
# arguments
#  $1: Directory to be backupped.
#  $2: User name at remote host.
#  $3: Remote host.
#  $4: Destination directory at remote host for storing the backup.
#  $5: if present do a dry run.
#
#  In a file named ./syncsite/exclude.txt one can
#  list a number of files and directories to be excluded from the syncing (see
#  e.g. http://www.linuxmanpages.com/man1/rsync.1.php).
#
DoSync () {

    local readonly Dir="$1"
    local readonly RUser="$2"
    local readonly RHost="$3"
    local readonly RDir="$4"
    local readonly DoDryRun="$5"
    local readonly UserAtHost="$RUser@$RHost"
    local readonly TimeStamp=$(date +%y%m%d-%H%M%S)
    local readonly LogDir=syncsite
    local readonly LogFile=$LogDir/$TimeStamp.log
    local readonly RSyncFrmt='%i %10b %12l %-f'

    local readonly DestinationPath="$UserAtHost:$RDir"
    if [ "$DoDryRun" ]; then
        local readonly QuietOrDryRun="-vv --dry-run"
    else
        local readonly QuietOrDryRun="-v"
    fi
    local readonly ExcludeFrom="syncsite/exclude.txt"
    if [ -f "$ExcludeFrom" ]; then
        local readonly Exclude="--exclude-from $ExcludeFrom"
    else
        local readonly Exclude=''
    fi

    mkdir -p $LogDir

    DoLogMssg     "$(date '+%Y/%m/%d %T')" "Source:          " "$Dir"
    DoLogMssg     "                   "    "Exclude from:    " "$ExcludeFrom"
    DoLogMssg     "                   "    "Sync with   :    " "$DestinationPath"

# On reverse (remote to local) do the following instead:
# rsync -av $UserAtHost:$RemoteDir/ $LocalDir

    rsync   --archive \
        --delete \
        --delete-excluded \
        --ipv6 \
        --log-file=$LogFile \
        --log-file-format="$RSyncFrmt" \
        $QuietOrDryRun \
        $Exclude \
        $Dir \
        $DestinationPath
}

# ==========================================================================
# DoLogMssg () writes three arguments to the logfile
#
DoLogMssg () {
    echo "$1 $2 $3"
}

# ==========================================================================
# Usage () tells the user how to use this script
#
Usage ()
{
    cat << EOF
NAME $BaseName:
    This script synchchronizes the data in $LocalDir
    with the data on $RemoteHost in the folder $RemoteDir

USAGE:
$0 [-h] [-v] [-D] [-s <dir>]

OPTIONS:
    -h       show this message and exit.
    -s <dir> sync the subdirectory $LocalDir/<dir> with
             $RemoteDir/<dir> only.
    -v       show version and exit.
    -D       do a dry run.

RETURNS:
    internal exit code given by a process executed by $0.

EOF
}

# ==========================================================================
# Main:
#
DoDryRun=''
SubDir=''
if ! [ -d "htdocs/" ]; then
	echo "Run deploy only from the root of the repository"
	exit
fi
while getopts “:hvks:D” OPTION
do
    case $OPTION
    in h)
        Usage
        exit
    ;; v)
        echo "Version: $Version"
        exit
    ;; s)
        SubDir="/$OPTARG"
    ;; D)
        DoDryRun="dry"
    ;; ?)
        echo "Illegal option: $?"
        Usage
        exit
    ;;
    esac
done

DoSync \
    $LocalDir$SubDir/ \
    $RemoteUser \
    $RemoteHost \
    $RemoteDir$SubDir \
    $DoDryRun
